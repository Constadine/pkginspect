name: build

env:
  FORCE_COLOR: 1
  UV_FROZEN: 1
  UV_PYTHON_PREFERENCE: only-managed

on: [pull_request, push, workflow_dispatch]

jobs:
  pre-commit:
    env:
      PRE_COMMIT_COLOR: always
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Set up uv
        uses: astral-sh/setup-uv@v6.3.1
      - name: Install dependencies
        run: uv sync
      - name: Identify Python version
        id: identify-python
        run: echo "python-version=$(uv run python -V | cut -d' ' -f2)" >> "$GITHUB_OUTPUT"
      - name: Cache pre-commit hooks
        id: cache-pre-commit-hooks
        uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: ${{ runner.os }}-${{ runner.arch }}-python-${{ steps.identify-python.outputs.python-version }}-pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: ${{ runner.os }}-${{ runner.arch }}-python-${{ steps.identify-python.outputs.python-version }}-pre-commit-
      - name: Prune pre-commit hooks
        if: steps.cache-pre-commit-hooks.outputs.cache-hit != 'true'
        run: uv run pre-commit gc
      - name: Cache mypy
        id: cache-mypy
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4
        with:
          path: .mypy_cache
          key: ${{ runner.os }}-${{ runner.arch }}-python-${{ steps.identify-python.outputs.python-version }}-mypy-${{ hashFiles('uv.lock') }}-${{ github.sha }}
          restore-keys: ${{ runner.os }}-${{ runner.arch }}-python-${{ steps.identify-python.outputs.python-version }}-mypy-${{ hashFiles('uv.lock') }}-
      - name: Run pre-commit
        run: uv run pre-commit run --show-diff-on-failure --all-files
